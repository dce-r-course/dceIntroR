[
  {
    "objectID": "08_table1.html",
    "href": "08_table1.html",
    "title": "8  Table 1",
    "section": "",
    "text": "8.1 Make a script\nIn this session, we will present a way to make a Table 1\nFirst, make a script where we can save our code. Choose either R Markdown/Quarto or R Script.\nName it “table1”.\nSave it in the folder R.",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Table 1</span>"
    ]
  },
  {
    "objectID": "08_table1.html#load-packages",
    "href": "08_table1.html#load-packages",
    "title": "8  Table 1",
    "section": "8.2 Load packages",
    "text": "8.2 Load packages\nLoad the packages we will need under a section called “Load packages”.\n\n\nCode\nlibrary(tidyverse)\nlibrary(gtsummary)\nlibrary(writexl)\n\n\nWe will introduce the gtsummary package, so we should add this as a workflow dependency. Similar with writexl.\n\n\nCode\nusethis::use_package(\"gtsummary\")\nusethis::use_package(\"writexl\")",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Table 1</span>"
    ]
  },
  {
    "objectID": "08_table1.html#load-data",
    "href": "08_table1.html#load-data",
    "title": "8  Table 1",
    "section": "8.3 Load data",
    "text": "8.3 Load data\n\n\nCode\ndata_covariates_mi &lt;- readRDS(here::here(\"data/data_covariates_mi.rds\"))\n\n\nLet’s recap the variables, we have |&gt; |&gt;\n\n\nCode\nglimpse(data_covariates_mi)\n\n\nRows: 4,000\nColumns: 10\n$ id                    &lt;fct&gt; 212, 483, 731, 949, 981, 982, 1123, 2166, 2469, …\n$ index_date            &lt;date&gt; 2014-07-18, 2017-12-10, 2023-07-27, 2021-11-03,…\n$ los                   &lt;dbl&gt; 4, 9, 7, 7, 13, 6, 6, 7, 5, 14, 4, 8, 9, 2, 7, 1…\n$ birth_date            &lt;date&gt; 1941-01-01, 1918-01-01, 1931-01-01, 1954-01-01,…\n$ sex                   &lt;fct&gt; 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, …\n$ age                   &lt;dbl&gt; 74, 100, 93, 68, 76, 70, 61, 55, 104, 72, 36, 61…\n$ hypertension          &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, …\n$ hypercholesterolaemia &lt;int&gt; 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, …\n$ diabetes              &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, …\n$ heart_failure         &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Table 1</span>"
    ]
  },
  {
    "objectID": "08_table1.html#make-the-table-1",
    "href": "08_table1.html#make-the-table-1",
    "title": "8  Table 1",
    "section": "8.4 Make the Table 1",
    "text": "8.4 Make the Table 1\n\n\nCode\ntbl_summary(\n  data_covariates_mi,\n  include = c(age, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n  by = sex,\n  missing = \"no\"\n) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\n1 N = 2,5001\n2 N = 1,5001\n\n\n\n\nage\n65 (55, 75)\n73 (62, 84)\n\n\nlos\n7.0 (6.0, 9.0)\n7.0 (5.0, 9.0)\n\n\nhypertension\n657 (26%)\n500 (33%)\n\n\nhypercholesterolaemia\n737 (29%)\n469 (31%)\n\n\ndiabetes\n371 (15%)\n201 (13%)\n\n\nheart_failure\n137 (5.5%)\n91 (6.1%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\n\n8.4.1 Adjust labels\n\n\nCode\ntbl_summary(\n  data_covariates_mi,\n  include = c(age, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n  by = sex,\n  missing = \"no\",\n  label = list(\n    age ~ \"Median age, in years (Q1;Q3)\",\n    los ~ \"Median hospital stay, in days (Q1;Q3)\",\n    hypertension ~ \"Hypertension\",\n    hypercholesterolaemia ~ \"Hypercholesterolaemia\",\n    diabetes ~ \"Diabetes\",\n    heart_failure ~ \"Heart failure\"\n  )\n) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\n1 N = 2,5001\n2 N = 1,5001\n\n\n\n\nMedian age, in years (Q1;Q3)\n65 (55, 75)\n73 (62, 84)\n\n\nMedian hospital stay, in days (Q1;Q3)\n7.0 (6.0, 9.0)\n7.0 (5.0, 9.0)\n\n\nHypertension\n657 (26%)\n500 (33%)\n\n\nHypercholesterolaemia\n737 (29%)\n469 (31%)\n\n\nDiabetes\n371 (15%)\n201 (13%)\n\n\nHeart failure\n137 (5.5%)\n91 (6.1%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nTo adjust labels for sex, we could do something like:\n\n\nCode\ndata_covariates_mi |&gt;\n  mutate(sex = factor(sex, levels = c(1, 2), labels = c(\"Male\", \"Female\"))) |&gt;\n  tbl_summary(\n    include = c(age, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n    by = sex,\n    missing = \"no\",\n    label = list(\n      age ~ \"Median age, in years (Q1;Q3)\",\n      los ~ \"Median hospital stay, in days (Q1;Q3)\",\n      hypertension ~ \"Hypertension\",\n      hypercholesterolaemia ~ \"Hypercholesterolaemia\",\n      diabetes ~ \"Diabetes\",\n      heart_failure ~ \"Heart failure\"\n    )\n  ) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nMale N = 2,5001\nFemale N = 1,5001\n\n\n\n\nMedian age, in years (Q1;Q3)\n65 (55, 75)\n73 (62, 84)\n\n\nMedian hospital stay, in days (Q1;Q3)\n7.0 (6.0, 9.0)\n7.0 (5.0, 9.0)\n\n\nHypertension\n657 (26%)\n500 (33%)\n\n\nHypercholesterolaemia\n737 (29%)\n469 (31%)\n\n\nDiabetes\n371 (15%)\n201 (13%)\n\n\nHeart failure\n137 (5.5%)\n91 (6.1%)\n\n\n\n1 Median (Q1, Q3); n (%)\n\n\n\n\n\n\n\n\nIf your exposure is not totally self-explanatory, we can add a header\n\n\nCode\ndata_covariates_mi |&gt;\n  mutate(sex = factor(sex, levels = c(1, 2), labels = c(\"Male\", \"Female\"))) |&gt;\n  tbl_summary(\n    include = c(age, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n    by = sex,\n    missing = \"no\",\n    label = list(\n      age ~ \"Median age, in years (Q1;Q3)\",\n      los ~ \"Median hospital stay, in days (Q1;Q3)\",\n      hypertension ~ \"Hypertension\",\n      hypercholesterolaemia ~ \"Hypercholesterolaemia\",\n      diabetes ~ \"Diabetes\",\n      heart_failure ~ \"Heart failure\"\n    ),\n    statistic = list(all_continuous() ~ \"{median} ({p25};{p75})\") # customise the Q1;Q3\n  ) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\") |&gt;\n  modify_spanning_header(c(\"stat_1\", \"stat_2\") ~ \"**Sex**\") |&gt;\n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\n\nSex\n\nOverall N = 4,0001\n\n\nMale N = 2,5001\nFemale N = 1,5001\n\n\n\n\nMedian age, in years (Q1;Q3)\n65 (55;75)\n73 (62;84)\n68 (57;79)\n\n\nMedian hospital stay, in days (Q1;Q3)\n7.0 (6.0;9.0)\n7.0 (5.0;9.0)\n7.0 (5.0;9.0)\n\n\nHypertension\n657 (26%)\n500 (33%)\n1,157 (29%)\n\n\nHypercholesterolaemia\n737 (29%)\n469 (31%)\n1,206 (30%)\n\n\nDiabetes\n371 (15%)\n201 (13%)\n572 (14%)\n\n\nHeart failure\n137 (5.5%)\n91 (6.1%)\n228 (5.7%)\n\n\n\n1 Median (Q1;Q3); n (%)\n\n\n\n\n\n\n\n\n\n\n8.4.2 Age groups\nHow does it handle categorical variables?\nLets try to create age groups\n\n\nCode\ndata_covariates_mi &lt;- data_covariates_mi |&gt;\n  mutate(\n    agegroup =\n      case_when(\n        age &lt; 50 ~ \"&lt;50\",\n        age %in% c(50:80) ~ \"50-80\",\n        age &gt; 80 ~ \"&gt;80\"\n      ),\n    .before = hypertension\n  ) |&gt;\n  mutate(\n    agegroup = factor(agegroup, levels = c(\"&lt;50\", \"50-80\", \"&gt;80\"))\n  )\n\n\n\n\n8.4.3 Add overall\n\n\nCode\ndata_covariates_mi |&gt;\n  mutate(sex = factor(sex, levels = c(1, 2), labels = c(\"Male\", \"Female\"))) |&gt;\n  tbl_summary(\n    include = c(age, agegroup, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n    by = sex,\n    missing = \"no\",\n    label = list(\n      age ~ \"Median age, in years (Q1;Q3)\",\n      agegroup ~ \"Age group\",\n      los ~ \"Median hospital stay, in days (Q1;Q3)\",\n      hypertension ~ \"Hypertension\",\n      hypercholesterolaemia ~ \"Hypercholesterolaemia\",\n      diabetes ~ \"Diabetes\",\n      heart_failure ~ \"Heart failure\"\n    ),\n    statistic = list(all_continuous() ~ \"{median} ({p25};{p75})\") # customise the Q1;Q3\n  ) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\") |&gt;\n  modify_spanning_header(c(\"stat_1\", \"stat_2\") ~ \"**Sex**\") |&gt;\n  add_overall(last = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\n\nSex\n\nOverall N = 4,0001\n\n\nMale N = 2,5001\nFemale N = 1,5001\n\n\n\n\nMedian age, in years (Q1;Q3)\n65 (55;75)\n73 (62;84)\n68 (57;79)\n\n\nAge group\n\n\n\n\n\n\n\n\n    &lt;50\n398 (16%)\n94 (6.3%)\n492 (12%)\n\n\n    50-80\n1,714 (69%)\n942 (63%)\n2,656 (66%)\n\n\n    &gt;80\n388 (16%)\n464 (31%)\n852 (21%)\n\n\nMedian hospital stay, in days (Q1;Q3)\n7.0 (6.0;9.0)\n7.0 (5.0;9.0)\n7.0 (5.0;9.0)\n\n\nHypertension\n657 (26%)\n500 (33%)\n1,157 (29%)\n\n\nHypercholesterolaemia\n737 (29%)\n469 (31%)\n1,206 (30%)\n\n\nDiabetes\n371 (15%)\n201 (13%)\n572 (14%)\n\n\nHeart failure\n137 (5.5%)\n91 (6.1%)\n228 (5.7%)\n\n\n\n1 Median (Q1;Q3); n (%)",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Table 1</span>"
    ]
  },
  {
    "objectID": "08_table1.html#save",
    "href": "08_table1.html#save",
    "title": "8  Table 1",
    "section": "8.5 Save",
    "text": "8.5 Save\nWhen we are happy with the ouput, we can save the Table 1. You can save as an Excel-file, making it ready for your manuscript (if you write that in e.g., Microsoft Word).\n\n\nCode\ntable1 &lt;-\n  data_covariates_mi |&gt;\n  mutate(sex = factor(sex, levels = c(1, 2), labels = c(\"Male\", \"Female\"))) |&gt;\n  tbl_summary(\n    include = c(age, agegroup, sex, los, hypertension, hypercholesterolaemia, diabetes, heart_failure),\n    by = sex,\n    missing = \"no\",\n    label = list(\n      age ~ \"Median age, in years (Q1;Q3)\",\n      agegroup ~ \"Age group\",\n      los ~ \"Median hospital stay, in days (Q1;Q3)\",\n      hypertension ~ \"Hypertension\",\n      hypercholesterolaemia ~ \"Hypercholesterolaemia\",\n      diabetes ~ \"Diabetes\",\n      heart_failure ~ \"Heart failure\"\n    ),\n    statistic = list(all_continuous() ~ \"{median} ({p25};{p75})\") # customise the Q1;Q3\n  ) |&gt;\n  bold_labels() |&gt;\n  modify_header(label = \"**Variable**\") |&gt;\n  modify_spanning_header(c(\"stat_1\", \"stat_2\") ~ \"**Sex**\") |&gt;\n  add_overall(last = TRUE)\n\n\nWhere to save it? That’s essentially up to you. You could make a new folder and name it “results” or something similar. Using this approach, you can save it an .html file for later exploration. You can also save as .xlsx, but may require some additional cleaning.\n\n\nCode\ntable1_gt &lt;- as_gt(table1)\ngt::gtsave(table1_gt, filename = here::here(\"results/table1.html\"))",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Table 1</span>"
    ]
  },
  {
    "objectID": "09_survival.html",
    "href": "09_survival.html",
    "title": "9  Time-to-event setup",
    "section": "",
    "text": "9.1 Make a script\nIn this session, we will briefly give an example on how to create a time-to-event setup and run a Kaplan-Meier estimator as well as plotting the 1-Kaplan-Meier curves (all-cause mortality risk plots). No statistical theory will be covered.\nFirst, make a script where we can save our code. Choose either R Markdown/Quarto or R Script.\nName it “mortality”.\nSave it in the folder R.",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Time-to-event setup</span>"
    ]
  },
  {
    "objectID": "09_survival.html#load-packages",
    "href": "09_survival.html#load-packages",
    "title": "9  Time-to-event setup",
    "section": "9.2 Load packages",
    "text": "9.2 Load packages\nLoad the packages we will need under a section called “Load packages”.\n\n\nCode\nlibrary(tidyverse)\nlibrary(survival)\nlibrary(ggsurvfit)\nlibrary(glue)\nlibrary(writexl)\n\n\nAdd new packages to the DESCRIPTION file.\n\n\nCode\nusethis::use_package(\"survival\")\nusethis::use_package(\"glue\")\nusethis::use_package(\"writexl\")",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Time-to-event setup</span>"
    ]
  },
  {
    "objectID": "09_survival.html#load-data",
    "href": "09_survival.html#load-data",
    "title": "9  Time-to-event setup",
    "section": "9.3 Load data",
    "text": "9.3 Load data\n\n\nCode\ndata_pop_mi &lt;- readRDS(here::here(\"data/data_pop_mi.rds\"))\n\nbasic_data &lt;- readRDS(here::here(\"data_raw/basic_data.rds\"))",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Time-to-event setup</span>"
    ]
  },
  {
    "objectID": "09_survival.html#time-to-event-setup",
    "href": "09_survival.html#time-to-event-setup",
    "title": "9  Time-to-event setup",
    "section": "9.4 Time-to-event setup",
    "text": "9.4 Time-to-event setup\nNow, we will setup our dataset for a time-to-event analysis. We will follow patients from index_date until death, 1 year of follow-up, or December 31, 2024, whichever occurred first. We here just assume no emigration.\n\n9.4.1 Step 01: Add death date\n\n\nCode\ndata_tte &lt;- data_pop_mi |&gt; \n  select(id, index_date) |&gt; \n  left_join(basic_data |&gt; select(id, sex, death_date), by = \"id\")\n\ndata_tte\n\n\n# A tibble: 4,000 × 4\n   id    index_date sex   death_date\n   &lt;fct&gt; &lt;date&gt;     &lt;fct&gt; &lt;date&gt;    \n 1 212   2014-07-18 1     NA        \n 2 483   2017-12-10 2     NA        \n 3 731   2023-07-27 2     NA        \n 4 949   2021-11-03 1     NA        \n 5 981   2020-08-05 2     NA        \n 6 982   2015-05-22 2     NA        \n 7 1123  2015-07-25 1     NA        \n 8 2166  2016-09-30 1     NA        \n 9 2469  2023-08-26 2     2024-04-23\n10 2870  2010-09-03 1     NA        \n# ℹ 3,990 more rows\n\n\n\n\n9.4.2 Step 02: Generate stop dates\n\n\nCode\ndata_tte &lt;- data_tte |&gt; \n  dplyr::mutate(\n    max_fu = lubridate::ymd(index_date) + lubridate::years(1), # 1 year of follow-up\n    stop_study = lubridate::ymd(\"2024-12-31\")) # stop of study\n\ndata_tte\n\n\n# A tibble: 4,000 × 6\n   id    index_date sex   death_date max_fu     stop_study\n   &lt;fct&gt; &lt;date&gt;     &lt;fct&gt; &lt;date&gt;     &lt;date&gt;     &lt;date&gt;    \n 1 212   2014-07-18 1     NA         2015-07-18 2024-12-31\n 2 483   2017-12-10 2     NA         2018-12-10 2024-12-31\n 3 731   2023-07-27 2     NA         2024-07-27 2024-12-31\n 4 949   2021-11-03 1     NA         2022-11-03 2024-12-31\n 5 981   2020-08-05 2     NA         2021-08-05 2024-12-31\n 6 982   2015-05-22 2     NA         2016-05-22 2024-12-31\n 7 1123  2015-07-25 1     NA         2016-07-25 2024-12-31\n 8 2166  2016-09-30 1     NA         2017-09-30 2024-12-31\n 9 2469  2023-08-26 2     2024-04-23 2024-08-26 2024-12-31\n10 2870  2010-09-03 1     NA         2011-09-03 2024-12-31\n# ℹ 3,990 more rows\n\n\n\n\n9.4.3 Step 03. Select first of death, max follow-up, or study stop\n\n\nCode\ndata_tte &lt;- data_tte |&gt; \n  mutate(across(c(death_date, max_fu, stop_study), ~ as.Date(.x)), # ensure that dates are &lt;date&gt; format\n         end_date = pmin(death_date, max_fu, stop_study, na.rm = TRUE) # Follow-up ends at death, 1 year, or study stop — whichever comes \n  )\n\ndata_tte\n\n\n# A tibble: 4,000 × 7\n   id    index_date sex   death_date max_fu     stop_study end_date  \n   &lt;fct&gt; &lt;date&gt;     &lt;fct&gt; &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;date&gt;    \n 1 212   2014-07-18 1     NA         2015-07-18 2024-12-31 2015-07-18\n 2 483   2017-12-10 2     NA         2018-12-10 2024-12-31 2018-12-10\n 3 731   2023-07-27 2     NA         2024-07-27 2024-12-31 2024-07-27\n 4 949   2021-11-03 1     NA         2022-11-03 2024-12-31 2022-11-03\n 5 981   2020-08-05 2     NA         2021-08-05 2024-12-31 2021-08-05\n 6 982   2015-05-22 2     NA         2016-05-22 2024-12-31 2016-05-22\n 7 1123  2015-07-25 1     NA         2016-07-25 2024-12-31 2016-07-25\n 8 2166  2016-09-30 1     NA         2017-09-30 2024-12-31 2017-09-30\n 9 2469  2023-08-26 2     2024-04-23 2024-08-26 2024-12-31 2024-04-23\n10 2870  2010-09-03 1     NA         2011-09-03 2024-12-31 2011-09-03\n# ℹ 3,990 more rows\n\n\n\n\n9.4.4 Step 04. Create a time indicator\n\n\nCode\ndata_tte &lt;- data_tte |&gt; \n  mutate(\n         time = as.numeric(end_date - index_date) # here in days\n         )\n\ndata_tte\n\n\n# A tibble: 4,000 × 8\n   id    index_date sex   death_date max_fu     stop_study end_date    time\n   &lt;fct&gt; &lt;date&gt;     &lt;fct&gt; &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;date&gt;     &lt;dbl&gt;\n 1 212   2014-07-18 1     NA         2015-07-18 2024-12-31 2015-07-18   365\n 2 483   2017-12-10 2     NA         2018-12-10 2024-12-31 2018-12-10   365\n 3 731   2023-07-27 2     NA         2024-07-27 2024-12-31 2024-07-27   366\n 4 949   2021-11-03 1     NA         2022-11-03 2024-12-31 2022-11-03   365\n 5 981   2020-08-05 2     NA         2021-08-05 2024-12-31 2021-08-05   365\n 6 982   2015-05-22 2     NA         2016-05-22 2024-12-31 2016-05-22   366\n 7 1123  2015-07-25 1     NA         2016-07-25 2024-12-31 2016-07-25   366\n 8 2166  2016-09-30 1     NA         2017-09-30 2024-12-31 2017-09-30   365\n 9 2469  2023-08-26 2     2024-04-23 2024-08-26 2024-12-31 2024-04-23   241\n10 2870  2010-09-03 1     NA         2011-09-03 2024-12-31 2011-09-03   365\n# ℹ 3,990 more rows\n\n\nYou may wish to check some restrictions:\n\n\nCode\n# No negative time values\ndata_tte |&gt; \n  filter(time &lt; 0 )\n\n\n# A tibble: 0 × 8\n# ℹ 8 variables: id &lt;fct&gt;, index_date &lt;date&gt;, sex &lt;fct&gt;, death_date &lt;date&gt;,\n#   max_fu &lt;date&gt;, stop_study &lt;date&gt;, end_date &lt;date&gt;, time &lt;dbl&gt;\n\n\nCode\n# Max follow-up time\ndata_tte |&gt; \n  filter(time == max(time)) |&gt; \n  select(time) |&gt; \n  distinct()\n\n\n# A tibble: 1 × 1\n   time\n  &lt;dbl&gt;\n1   366\n\n\nCode\n# Max date of stop\ndata_tte |&gt; \n  filter(end_date == max(end_date)) |&gt; \n  select(end_date) |&gt; \n  distinct()\n\n\n# A tibble: 1 × 1\n  end_date  \n  &lt;date&gt;    \n1 2024-12-31\n\n\n\n\n9.4.5 Step 05. Create a status indicator\n\n\nCode\ndata_tte &lt;- data_tte |&gt; \n  mutate(\n         status = \n           case_when(\n             !is.na(death_date) & death_date == end_date ~ 1, # if stop of follow-up due to death\n             TRUE ~ 0 # if censored due to 1 year of follow-up or study stop\n             )\n         ) |&gt; \n  select(-c(max_fu, stop_study))\n\ndata_tte\n\n\n# A tibble: 4,000 × 7\n   id    index_date sex   death_date end_date    time status\n   &lt;fct&gt; &lt;date&gt;     &lt;fct&gt; &lt;date&gt;     &lt;date&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 212   2014-07-18 1     NA         2015-07-18   365      0\n 2 483   2017-12-10 2     NA         2018-12-10   365      0\n 3 731   2023-07-27 2     NA         2024-07-27   366      0\n 4 949   2021-11-03 1     NA         2022-11-03   365      0\n 5 981   2020-08-05 2     NA         2021-08-05   365      0\n 6 982   2015-05-22 2     NA         2016-05-22   366      0\n 7 1123  2015-07-25 1     NA         2016-07-25   366      0\n 8 2166  2016-09-30 1     NA         2017-09-30   365      0\n 9 2469  2023-08-26 2     2024-04-23 2024-04-23   241      1\n10 2870  2010-09-03 1     NA         2011-09-03   365      0\n# ℹ 3,990 more rows\n\n\n\n\n9.4.6 Step 06. Fit the model\n\n\nCode\nfit_km &lt;- survfit(Surv(time, status) ~ sex, data = data_tte)\n\n\n\n\n9.4.7 Step 07. Check the output\nYou may wish to check the output at certain time points\n\n\nCode\ntime_points &lt;- c(0, 30, 30*3, 30*6, 30*9, 30*12)\n\nprint(summary(fit_km, times = time_points))\n\n\nCall: survfit(formula = Surv(time, status) ~ sex, data = data_tte)\n\n                sex=1 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    0   2500       0    1.000 0.00000        1.000        1.000\n   30   2185     304    0.878 0.00655        0.865        0.891\n   90   2115      44    0.860 0.00695        0.847        0.874\n  180   2018      68    0.832 0.00750        0.818        0.847\n  270   1947      44    0.814 0.00782        0.799        0.830\n  360   1870      46    0.795 0.00814        0.779        0.811\n\n                sex=2 \n time n.risk n.event survival std.err lower 95% CI upper 95% CI\n    0   1500       0    1.000 0.00000        1.000        1.000\n   30   1332     160    0.893 0.00799        0.878        0.909\n   90   1289      26    0.875 0.00855        0.859        0.892\n  180   1251      22    0.860 0.00898        0.843        0.878\n  270   1211      21    0.846 0.00937        0.828        0.864\n  360   1178      17    0.834 0.00968        0.815        0.853\n\n\n\n\n9.4.8 Step 08. Plot, quick and dirty\nYou can plot the Kaplan-Meier curve very easy with ggsurvfit. You can customise with ggplot2.\n\n\nCode\nggsurvfit(fit_km) + \n  add_confidence_interval() + \n  add_risktable() + \n  add_quantile(y_value = 0.6, color = \"gray50\", linewidth = 0.75) +\n  scale_ggsurvfit()\n\n\n\n\n\n\n\n\n\n\n\n9.4.9 Step 09. Alternative result extraction and plotting\nThere are several different ways to do this. Probably also some more elegant ways.\nNow, we will store the output from the fit_km object in a format allowing us to extract results — and plot the risk curves\n\n9.4.9.1 Generate data\n\n\nCode\nmax_fu &lt;- max(data_tte$time)\ns_fit &lt;- summary(fit_km, times = 0:max_fu)\n\nround_function &lt;- function(x){\n  ifelse(x &gt;= 10,\n         sprintf(\"%.1f\", x), # 1 digit if 10 or higher\n         sprintf(\"%.2f\", x)) # 2 digits if lower\n}\n\ndata_mortality &lt;- data.frame(\n  time       = s_fit$time,\n  n_risk     = s_fit$n.risk,\n  n_event    = s_fit$n.event,\n  surv       = s_fit$surv,\n  strata     = s_fit$strata,\n  upper      = s_fit$upper,\n  lower      = s_fit$lower\n) |&gt; \n  mutate(\n    group = case_when(\n      strata == \"sex=1\" ~ \"Male\",\n      strata == \"sex=2\" ~ \"Female\"\n      ),\n    group = factor(group, levels = c(\"Male\", \"Female\")),\n    risk_crude = (1-surv)*100,\n    ll_crude = (1-upper)*100,\n    ul_crude = (1-lower)*100\n  ) |&gt; \n  select(-c(strata, surv, upper, lower)) |&gt; \n  mutate(\n    across(\n      c(\n        risk_crude, ll_crude, ul_crude\n      ),\n      ~ round_function(.x)\n    )\n  )\n\nhead(data_mortality,20)\n\n\n   time n_risk n_event group risk_crude ll_crude ul_crude\n1     0   2500       0  Male       0.00     0.00     0.00\n2     1   2500      18  Male       0.72     0.39     1.05\n3     2   2482      23  Male       1.64     1.14     2.14\n4     3   2458      14  Male       2.20     1.62     2.77\n5     4   2444      21  Male       3.04     2.37     3.71\n6     5   2422      22  Male       3.92     3.16     4.68\n7     6   2400      18  Male       4.64     3.81     5.46\n8     7   2381      16  Male       5.28     4.40     6.16\n9     8   2365      11  Male       5.72     4.81     6.63\n10    9   2353      25  Male       6.72     5.74     7.70\n11   10   2327      21  Male       7.57     6.52     8.60\n12   11   2306       6  Male       7.81     6.75     8.85\n13   12   2299       7  Male       8.09     7.01     9.15\n14   13   2292       5  Male       8.29     7.20     9.36\n15   14   2286       2  Male       8.37     7.28     9.45\n16   15   2284      12  Male       8.85     7.73     9.96\n17   16   2272       6  Male       9.09     7.96     10.2\n18   17   2266       4  Male       9.25     8.11     10.4\n19   18   2261       7  Male       9.53     8.37     10.7\n20   19   2253      10  Male       9.93     8.75     11.1\n\n\n\n\n9.4.9.2 Extract results\nExtract results and print in different formats\n\n\nCode\nresults_mortality &lt;- \n  data_mortality |&gt; \n  filter(time %in% time_points,\n         time != 0) |&gt; \n  select(time, group, risk_crude, ll_crude, ul_crude)\n\nresults_mortality\n\n\n   time  group risk_crude ll_crude ul_crude\n1    30   Male       12.2     10.9     13.5\n2    90   Male       14.0     12.6     15.3\n3   180   Male       16.8     15.3     18.2\n4   270   Male       18.6     17.0     20.1\n5   360   Male       20.5     18.9     22.1\n6    30 Female       10.7     9.12     12.2\n7    90 Female       12.5     10.8     14.1\n8   180 Female       14.0     12.2     15.7\n9   270 Female       15.4     13.6     17.2\n10  360 Female       16.6     14.7     18.5\n\n\nCode\nresults_mortality |&gt; \n  pivot_wider(\n    names_from = time,\n    values_from = c(risk_crude, ll_crude, ul_crude)\n  ) |&gt; \n  select(group, ends_with(\"_30\"), ends_with(\"_90\"), ends_with(\"_180\"), ends_with(\"_270\"), ends_with(\"_360\")) |&gt; \nmutate(\n    risk_30 = glue(\"{risk_crude_30} ({ll_crude_30}–{ul_crude_30})\"),\n    risk_90 = glue(\"{risk_crude_90} ({ll_crude_90}–{ul_crude_90})\"),\n    risk_180 = glue(\"{risk_crude_180} ({ll_crude_180}–{ul_crude_180})\"),\n    risk_270 = glue(\"{risk_crude_270} ({ll_crude_270}–{ul_crude_270})\"),\n    risk_360 = glue(\"{risk_crude_360} ({ll_crude_360}–{ul_crude_360})\")\n  ) |&gt;\n  select(group, risk_30, risk_90, risk_180, risk_270, risk_360)\n\n\n# A tibble: 2 × 6\n  group  risk_30          risk_90          risk_180         risk_270    risk_360\n  &lt;fct&gt;  &lt;glue&gt;           &lt;glue&gt;           &lt;glue&gt;           &lt;glue&gt;      &lt;glue&gt;  \n1 Male   12.2 (10.9–13.5) 14.0 (12.6–15.3) 16.8 (15.3–18.2) 18.6 (17.0… 20.5 (1…\n2 Female 10.7 (9.12–12.2) 12.5 (10.8–14.1) 14.0 (12.2–15.7) 15.4 (13.6… 16.6 (1…\n\n\n\n\n9.4.9.3 Plot\n\n\nCode\nplot_mortality &lt;- \ndata_mortality |&gt;\n  mutate(across(c(risk_crude, time, ll_crude, ul_crude), ~ as.numeric(.x))) |&gt; \n  ggplot(aes(y = risk_crude, x = time, group = group, col = group, fill = group, ymin = ll_crude, ymax = ul_crude)) +\n  geom_line(show_legend = T, linewidth = .8) +\n  geom_ribbon(alpha = .25, col = NA, linetype = 0, show.legend = F) +\n  ggsci::scale_color_nejm() +\n  ggsci::scale_fill_nejm() +\n  scale_x_continuous(\n    name = \"Time since diagnosis (months)\",\n    expand = c(0, 0),\n    limits = c(0, 30*12),\n    breaks = seq(0, 30*12, 30*3),\n    labels = seq(0, 12, 3)\n  ) +\n  scale_y_continuous(\n    name = \"Absolute mortality risk (%)\",\n    limits = c(0, 30),\n    expand = c(0, 0),\n    breaks = seq(0, 30, 5),\n    labels = seq(0, 30, 5)\n  ) +\n  ggpubr::theme_classic2() +\n  theme(\n    plot.margin = margin(t = 0.5, r = 0.5, b = 0.5, l = 0.5, unit = \"cm\"),\n    text = element_text(family = \"serif\", size = 10),\n    axis.line = element_line(linewidth = .35),\n    axis.ticks = element_line(linewidth = .35),\n    axis.ticks.length = unit(.2, \"cm\"),\n    axis.title.x = element_text(face = \"bold\"),\n    axis.title.y = element_text(face = \"bold\", margin = margin(r = 7)),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 10),\n    legend.position = c(.9, .9)\n  )\n\nplot_mortality\n\n\n\n\n\n\n\n\n\nAdding a risk table can be quite cumbersome but is doable. But we will not look into that for now.\n\n\n\n9.4.10 Step 10. Save the results\n\n9.4.10.1 Results\n\n\nCode\nwrite_xlsx(results_mortality, here::here(\"results/results_mortality.xlsx\"))\n\n\n\n\n9.4.10.2 Plot\nYou can save the ggplot2 object through the save function in he Plots viewer. However, you can also do it using ggsave.\n\n\nCode\nggsave(\n  filename = here::here(\"results/plot_mortality.pdf\"),\n  plot = plot_mortality,\n  device = cairo_pdf,\n  width = 8,\n  height = 6,\n  units = \"in\",\n  dpi = 600\n)",
    "crumbs": [
      "Sessions",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Time-to-event setup</span>"
    ]
  }
]